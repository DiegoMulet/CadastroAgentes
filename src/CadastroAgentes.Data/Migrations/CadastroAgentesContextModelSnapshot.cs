// <auto-generated />
using System;
using CadastroAgentes.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CadastroAgentes.Data.Migrations
{
    [DbContext(typeof(CadastroAgentesContext))]
    partial class CadastroAgentesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CadastroAgentes.Business.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Altura")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 38, scale: 17)))
                        .HasColumnType("numeric(3,2)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataTerminoAnalise")
                        .HasColumnType("datetime");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Peso")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 38, scale: 17)))
                        .HasColumnType("numeric(6,3)");

                    b.Property<Guid?>("StatusId");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("CadastroAgentes.Business.Models.Fornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataTerminoAnalise")
                        .HasColumnType("datetime");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("QtdFuncionarios")
                        .HasColumnType("numeric(10)");

                    b.Property<Guid?>("StatusId");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("CadastroAgentes.Business.Models.Status", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(3)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f431c53-7bd4-4401-b952-48a068bbb86e"),
                            Codigo = 1m,
                            Descricao = "Cadastro Prévio"
                        },
                        new
                        {
                            Id = new Guid("e7822737-c55d-487a-80d5-3f2cd91ca510"),
                            Codigo = 2m,
                            Descricao = "Pendente"
                        },
                        new
                        {
                            Id = new Guid("0a10a2d7-7532-4bd2-a947-9e87621fc5e2"),
                            Codigo = 3m,
                            Descricao = "Encaminhado"
                        },
                        new
                        {
                            Id = new Guid("14c65317-a84f-4a7c-9fe5-9b3a3c68d54c"),
                            Codigo = 4m,
                            Descricao = "Aprovado"
                        });
                });

            modelBuilder.Entity("CadastroAgentes.Business.Models.Cliente", b =>
                {
                    b.HasOne("CadastroAgentes.Business.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("CadastroAgentes.Business.Models.Fornecedor", b =>
                {
                    b.HasOne("CadastroAgentes.Business.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });
#pragma warning restore 612, 618
        }
    }
}
